---
description: "Definition of the SIMD TargetExtension sse."
vendor: "intel"
extension_name: "sse"
lscpu_flags: ["sse", "sse2", "sse3", "ssse3", "sse4_1", "sse4_2" ]
arch_flags: {sse4_1: "sse4.1", sse4_2: "sse4.2"}
includes: ['"immintrin.h"']
simdT_name: "sse"
simdT_default_size_in_bits: 128
simdT_register_type_attributes: |-
   __attribute__((__vector_size__(VectorSizeInBits/8),__may_alias__,__aligned__(VectorSizeInBits/8)))
simdT_register_type: "BaseType"
simdT_mask_type: "register_t"
simdT_integral_mask_type: |-
   TSL_DEP_TYPE(
                     (sizeof(BaseType)==1),
                     uint16_t,
                     uint8_t
                  )
intrin_tp: {uint8_t: ["epu", 8], uint16_t: ["epu", 16], uint32_t: ["epu", 32], uint64_t: ["epu", 64], int8_t: ["epi", 8], int16_t: ["epi", 16], int32_t: ["epi", 32], int64_t: ["epi", 64], float: ["p", "s"], double: ["p", "d"]}
intrin_tp_full: {uint8_t: "epu8", uint16_t: "epu16", uint32_t: "epu32", uint64_t: "epi64", int8_t: "epi8", int16_t: "epi16", int32_t: "epi32", int64_t: "epi64", float: "ps", double: "pd"}
runtime_headers: ["cpu/include/tslCPUrt.hpp"]
# Rust information
includes_rust: ["std::arch::x86_64::*", "crate::constants::TSLArithmetic", "crate::constants::simd_traits::TargetExtension", "crate::constants::utils::helper_traits::SelectOffsetBaseType", "std::marker::PhantomData"]
register_type_mapping: [["u8","__m128i"], ["u16","__m128i"], ["u32","__m128i"], ["u64","__m128i"], ["i8","__m128i"], ["i16","__m128i"], ["i32","__m128i"], ["i64","__m128i"], ["f32","__m128"], ["f64","__m128d"]]
imask_mapping: [["u8","u16"], ["u16","u8"], ["u32", "u8"], ["u64", "u8"], ["i8","u16"], ["i16", "u8"], ["i32", "u8"], ["i64", "u8"], ["f32", "u8"], ["f64", "u8"]]
mask_type_rust: "Self::RegisterType"
...
