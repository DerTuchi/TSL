{% set ns = namespace(
   additional_template_type_name='',
   additional_template_params_with_defaults='',
   phantomdata=''
) %}
{% for parameter_dict in additional_non_specialized_template_parameters %}
   {% if parameter_dict["default_value"] %}
      {% set ns.additional_template_params_with_defaults = ns.additional_template_params_with_defaults ~ ", const " ~ parameter_dict["name"] ~ " : " ~ parameter_dict["ctype"] ~ ' = ' ~ parameter_dict["default_value"] %}
   {% else %}
      {% set ns.additional_template_type_name = ns.additional_template_type_name ~ "const " ~ parameter_dict["name"] ~ " : " ~ parameter_dict["ctype"] ~ ', ' %}
   {% endif %}
{% endfor %}
{% if additional_simd_template_parameter["name"] %}
   {% set ns.phantomdata = 'pub PhantomData<' ~ additional_simd_template_parameter["name"] ~ '>, ' %}
   {% if additional_simd_template_parameter["default_value"] %}
      {% set ns.additional_template_params_with_defaults = ns.additional_template_params_with_defaults ~ ', ' ~ additional_simd_template_parameter["name"] ~ ' : ' ~ 'TargetExtension' ~ ' = ' ~ additional_simd_template_parameter["default_value"] %}
   {% else %}
      {% set ns.additional_template_type_name = ns.additional_template_type_name ~ additional_simd_template_parameter["name"] ~ ' : ' ~ 'TargetExtension, ' %}
   {% endif %}
{% endif %}
{# Every implementation is in the (nested) namespace "functors" #}
{# This is the forward declaration of the actual primitive implementation struct #}
pub struct {{ functor_name }}<const Idof: bool, {{ ns.additional_template_type_name }}T: TargetExtension{{ ns.additional_template_params_with_defaults }}>({{ ns.phantomdata }}pub PhantomData<T>);
